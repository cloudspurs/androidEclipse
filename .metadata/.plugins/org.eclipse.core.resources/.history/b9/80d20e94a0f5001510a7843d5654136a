package server;

import java.io.IOException;
import java.nio.file.FileSystems;
import java.nio.file.Path;
import java.nio.file.WatchEvent;
import java.nio.file.WatchKey;
import java.nio.file.WatchService;
import java.nio.file.WatchEvent.Kind;
import java.nio.file.StandardWatchEventKinds;

public class watchFile {
	
	public static boolean watchPath(Path path, String file)throws IOException, InterruptedException {
		
	    WatchService watcher = FileSystems.getDefault().newWatchService();
	    
	    // 设置path路径文件观察服务（新建）
	    path.register(watcher, StandardWatchEventKinds.ENTRY_CREATE);
	    
	    while (true) {
	    	WatchKey key = watcher.take();
	    	
	    	for (WatchEvent<?> event : key.pollEvents()) {
	    		Kind<?> kind = event.kind();
	    		
	    		if (kind == StandardWatchEventKinds.OVERFLOW){
	    			continue;
	    		}
	    		
	    		if (kind == StandardWatchEventKinds.ENTRY_CREATE) {
	    			@SuppressWarnings("unchecked")
					WatchEvent<Path> watchEventPath = (WatchEvent<Path>)event;
	        		Path filename = watchEventPath.context();
	    			if (filename.toString().equals(file)) {
	    				return true;
	    			}
	    		}
	    		
	    		if (!key.reset()) {
	    			break;
	    		}
	    	}
	    }
	}
	
}